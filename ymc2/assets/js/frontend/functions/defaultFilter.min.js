import{YMC_CONTAINER,YMC_PATH,YMC_AJAX_URL}from"../core/constants.js";import{fetchFilteredPosts}from"../utils/fetchFilteredPosts.js";export function initDefaultFilter(){const filters=YMC_CONTAINER.querySelectorAll('[data-filter-type="default"]');filters.forEach(filter=>{const buttons=filter.querySelectorAll(".filter-button");buttons.forEach(button=>{button.addEventListener("click",setupDefaultFilterEvents)})})}function setupDefaultFilterEvents(){const button=this;const buttons=button.closest(".filter-buttons");const isMultiple=button.closest("[data-selection-mode]").dataset.selectionMode==="multiple";if(isMultiple){button.classList.toggle("is-active")}else{buttons.querySelectorAll("button.is-active").forEach(btn=>btn.classList.remove("is-active"));button.classList.add("is-active")}const termIds=Array.from(buttons.querySelectorAll("button.is-active")).filter(b=>b.classList.contains("is-active")).map(b=>b.dataset.termid);console.log(termIds);const config={post_types:"ymc_fetch_filtered_posts",nonce_code:YMC_AJAX_URL};const container=document.querySelector("#ymc-1");updateDataParams(container,{selection_mode:"single",debug:true,post_layout:"layout_grid"})}function updateDataParams(element,updates){if(!element||!element.dataset.params)return;let params;try{params=JSON.parse(element.dataset.params)}catch(e){console.error("Ошибка при парсинге data-params:",e);return}Object.assign(params,updates);element.dataset.params=JSON.stringify(params)}