
### –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä –≤ YMC

–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –≤ —Ç–≤–æ–µ–º –ø—Ä–æ–µ–∫—Ç–µ —É–∂–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç	               –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
getEffectiveTermIds.js	üîó –ï–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ —Å–±–æ—Ä–∞ —Ç–µ—Ä–º–æ–≤ —Å–æ –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
data-filter-type	    üìå –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫ —Å–æ–±–∏—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ DOM
data-all-terms	        üß© –ë—ç–∫–∞–ø-—Ç–µ—Ä–º—ã, –∫–æ–≥–¥–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ
globalSelectedTerms  	üß† (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) ‚Äî —Ç—Ä–µ–∫–µ—Ä –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –≤—ã–±–æ—Ä–æ–≤
updateDataParams()	    üì§ –û–±–Ω–æ–≤–ª—è–µ—Ç URL, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
fetchFilteredPosts()	üîÑ –ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã

---
–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–∏–ø —Ñ–∏–ª—å—Ç—Ä–∞ (—à–∞–≥–∏):
–î–æ–ø—É—Å—Ç–∏–º, —Ç—ã —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ñ–∏–ª—å—Ç—Ä —Ç–∏–ø–∞ range (—Å–ª–∞–π–¥–µ—Ä –ø–æ —á–∏—Å–ª–∞–º), –∏–ª–∏ color, –∏–ª–∏ checkbox-group, –∏–ª–∏ –¥–∞–∂–µ autocomplete.

üìç –®–∞–≥ 1: –£–∫–∞–∑–∞—Ç—å data-filter-type –Ω–∞ –∫–æ—Ä–Ω–µ–≤–æ–º —ç–ª–µ–º–µ–Ω—Ç–µ —Ñ–∏–ª—å—Ç—Ä–∞
<div class="my-color-filter" data-filter-type="color" data-selection-mode="multiple" data-all-terms="[33,34,35]">
   <!-- –í–Ω—É—Ç—Ä–∏ —Ç–≤–æ–π UI -->
</div>

–¢–∞–∫–∂–µ —Å–ª–µ–¥—É–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç data-all-terms, —á—Ç–æ–±—ã –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–ª—Å—è –Ω–∞–±–æ—Ä –±—ç–∫–∞–ø-—Ç–µ—Ä–º–æ–≤

üìç –®–∞–≥ 2: –í–Ω–µ—Å—Ç–∏ –ª–æ–≥–∏–∫—É –≤ getEffectiveTermIds.js
–≠—Ç–æ —Ü–µ–Ω—Ç—Ä —Å–±–æ—Ä–∞ —Ç–µ—Ä–º–æ–≤ —Å–æ –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.
–ö–∞–∂–¥—ã–π —Ñ–∏–ª—å—Ç—Ä –¥–æ–ª–∂–µ–Ω "—Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å" –æ —Å–≤–æ–∏—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–µ—Ä–º–∞—Ö.

–ü—Ä–∏–º–µ—Ä: –¥–æ–±–∞–≤–∏–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ñ–∏–ª—å—Ç—Ä–∞ —Å —Ç–∏–ø–æ–º color
js
if (filterType === 'color') {
    const selectedColorBoxes = filter.querySelectorAll('.color-box.selected');
    selectedTermIds = Array.from(selectedColorBoxes).map(box => Number(box.dataset.termid));
}

üìç –®–∞–≥ 3: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä
–°–æ–∑–¥–∞—ë—à—å initColorFilter.js, initRangeFilter.js, –∏ –≤ main.js –ø–æ–¥–∫–ª—é—á–∞–µ—à—å –µ–≥–æ:
js
import { initColorFilter } from './filters/initColorFilter.js';
initColorFilter();

–¢–∞–º —Ç—ã —Å–∞–º –æ–ø—Ä–µ–¥–µ–ª—è–µ—à—å, –∫–∞–∫ UI –º–µ–Ω—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ —á—Ç–æ-—Ç–æ –≤—ã–±—Ä–∞–Ω–æ, –∏ –æ–±–Ω–æ–≤–ª—è–µ—à—å globalSelectedTerms, –∏ –≤—ã–∑—ã–≤–∞–µ—à—å:

js
updateDataParams(container, {
    terms: getEffectiveTermIds(container),
    paged: 1
});
await fetchFilteredPosts(container);

===================================================================
–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, range-—Å–ª–∞–π–¥–µ—Ä (–¥–ª—è —Ü–µ–Ω—ã, –≥–æ–¥–∞, —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏ —Ç.–ø.) ‚Äî —Ç–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç
—Å–¥–µ–ª–∞—Ç—å –¥–≤–µ –≤–µ—â–∏ –≤ getEffectiveTermIds(container):

1. –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ—Ä–º–æ–≤
–í–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–∞ filterStrategies —Ç–µ–±–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞ —Ç–∏–ø–∞ range:

js
const filterStrategies = {
    dropdown: (filter) => {
        return Array.from(
            filter.querySelectorAll('input[type="checkbox"]:not(.js-dropdown-all-checkbox)')
        )
            .filter(cb => cb.checked)
            .map(cb => Number(cb.dataset.value));
    },

    default: (filter) => {
        return Array.from(
            filter.querySelectorAll('.filter-button.is-active:not(.js-filter-button-all)')
        )
            .map(btn => Number(btn.dataset.termid));
    },

    // üîΩ –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –¥–ª—è —Ç–∏–ø–∞ range
    range: (filter) => {
        const minInput = filter.querySelector('input[data-role="range-min"]');
        const maxInput = filter.querySelector('input[data-role="range-max"]');

        const min = Number(minInput?.value);
        const max = Number(maxInput?.value);

        if (!isNaN(min) && !isNaN(max)) {
            // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —Ç—ã –∑–∞—Ä–∞–Ω–µ–µ –∑–Ω–∞–µ—à—å, –∫–∞–∫–∏–µ —Ç–µ—Ä–º—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –¥–∏–∞–ø–∞–∑–æ–Ω—É
            // –ò–ª–∏ –ø–æ–ª—É—á–∞–µ—à—å –∏—Ö —á–µ—Ä–µ–∑ dataset
            const data = filter.querySelector('[data-range-terms]');
            if (data) {
                try {
                    const allTerms = JSON.parse(data.dataset.rangeTerms);
                    // —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–µ—Ä–º—ã –ø–æ–ø–∞–¥–∞—é—â–∏–µ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω
                    return allTerms
                        .filter(obj => obj.value >= min && obj.value <= max)
                        .map(obj => obj.id);
                } catch (e) {
                    console.warn('Invalid data-range-terms JSON', e);
                }
            }
        }
        return [];
    },

    _default: () => []
};

–ü—Ä–∏–º–µ—Ä data-range-terms: HTML
<div class="filter-range" data-filter-type="range">
  <input type="number" data-role="range-min" />
  <input type="number" data-role="range-max" />
  <div data-range-terms='[
    {"id": 101, "value": 1990},
    {"id": 102, "value": 1995},
    {"id": 103, "value": 2000},
    {"id": 104, "value": 2005}
  ]'></div>
</div>


2. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —É —Ç–µ–±—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω data-filter-type="range"
–¢–∞–∫ –∫–∞–∫ —Ç—ã —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏—à—å—Å—è –ø–æ filter.dataset.filterType, —ç—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–∑–æ–≤–µ—Ç –Ω—É–∂–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, –µ—Å–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞—Ç—å –∞—Ç—Ä–∏–±—É—Ç:

<div data-filter-type="range" data-selection-mode="single">
    <!-- —Ç–≤–æ—è –≤—ë—Ä—Å—Ç–∫–∞ —Å range -->
</div>

üöÄ –†–µ–∑—É–ª—å—Ç–∞—Ç
–¢–µ–ø–µ—Ä—å –ø—Ä–∏ –≤—ã–∑–æ–≤–µ getEffectiveTermIds(container):
—Ñ–∏–ª—å—Ç—Ä—ã range –±—É–¥—É—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞–Ω—ã, –≤—Å–µ —Ç–µ—Ä–º—ã –ø–æ–ø–∞–¥—É—Ç –≤ –æ–±—â–∏–π Set –∏ –æ—Ç–ø—Ä–∞–≤—è—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä.

üß† –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è
–ï—Å–ª–∏ —É —Ç–µ–±—è range —Ñ–∏–ª—å—Ç—Ä—ã –Ω–µ –ø–æ —Ç–µ—Ä–º–∞–º, –∞ –ø–æ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ—Å—Ç–æ meta_query), —Ç–æ–≥–¥–∞ getEffectiveTermIds
–Ω–µ —Ç—Ä–æ–≥–∞–π, –∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–π range –æ—Ç–¥–µ–ª—å–Ω–æ –≤ params.range = { min, max }.


























