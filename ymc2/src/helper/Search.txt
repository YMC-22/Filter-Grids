


public static function highlight_keyword($text, $keyword) : string {
		$escaped = preg_quote($keyword, '/');
		return preg_replace_callback(
			"/($escaped)/iu",
			function ($matches) {
				return '<b>' . $matches[1] . '</b>';
			},
			$text
		);
	}


	/**
	 * Получает все фрагменты текста, содержащие ключевое слово, и подсвечивает их.
	 *
	 * @param string $text — текст для поиска
	 * @param string $keyword — ключевое слово
	 * @param int $padding — количество символов до/после слова
	 * @param int $max_length — максимальная длина всего результата (обрезается при необходимости)
	 * @return string|null — фрагмент с подсветкой
	 */
	public static function extract_highlighted_fragments(string $text, string $keyword, int $padding = 30, int $max_length = 100) : ?string {
		// 1. Удаляем HTML-теги
		$text = strip_tags($text);

		// 2. Удаляем WordPress-шорткоды, например [vc_row], [gallery ids="..."], [/vc_column]
		$text = preg_replace('/\[[\/]?[^\]]+\]/', '', $text);

		// 3. Приводим к нижнему регистру для поиска
		$text_lower = mb_strtolower($text);
		$keyword_lower = mb_strtolower($keyword);

		$matches = [];
		$offset = 0;

		while (($pos = mb_strpos($text_lower, $keyword_lower, $offset)) !== false) {
			$start = max(0, $pos - $padding);
			$length = mb_strlen($keyword);
			$end = min(mb_strlen($text), $pos + $length + $padding);
			$fragment = mb_substr($text, $start, $end - $start);
			$matches[] = $fragment;
			$offset = $pos + $length;
		}

		if (empty($matches)) return null;

		// Склеиваем все найденные фрагменты с разделением
		$full_result = implode(" … ", $matches);

		// Подсветим все вхождения ключевого слова
		$highlighted = preg_replace(
			'/' . preg_quote($keyword, '/') . '/iu',
			'<b>$0</b>',
			$full_result
		);

		// Ограничим длину
		if (mb_strlen($highlighted) > $max_length) {
			$highlighted = mb_substr($highlighted, 0, $max_length) . '...';
		}

		return $highlighted;
	}

